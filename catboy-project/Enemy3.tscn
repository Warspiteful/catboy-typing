[gd_scene load_steps=12 format=2]

[ext_resource path="res://Enemy_Cursed_02.jpg" type="Texture" id=1]
[ext_resource path="res://Font/KiriFont.ttf" type="DynamicFontData" id=3]

[sub_resource type="GDScript" id=9]
script/source = "extends Spatial

#------------------------#
#References To Other Nodes
#------------------------# 

# Get Text Label
onready var prompt = $Enemy/Viewport/Control/Panel/RichTextLabel

# Get Attack Timer
onready var attack_timer = $AttackTimer  

# Get Text Value of Label
onready var prompt_text = prompt.text


# Holds Color Values
export (Color) var blue = Color(\"#4682b4\")
export (Color) var green = Color(\"#639765\")
export (Color) var red = Color(\"#a65455\")

# Controls Important Values Regarding Enemy Functions
export (float) var speed = 0.01
export (int) var damage = 1
export (float) var attack_distance = -3


# Important Variables
## Tracks if Enemy is Attacking
## - Informs whether to start attacking timer
var attacking : bool = false
## Difficulty Tracker
## - Determines Speed
var difficulty : int = 0
## Damage Queue
## - Tracks any damage being dealt by enemy
var damage_queue = []

var boss = false

# Ready Function
## Called at initialization
func _ready():

	# Gets Prompt from Prompt List
	prompt_text = PromptList.get_prompt()
	
	# Sets BBCode for Prompt
	prompt.parse_bbcode(set_center_tags(prompt_text))
	
	## Connects function to difficulty increase
	GlobalSignals.connect(\"difficulty_increase\", self, \"handle_difficulty_increased\")

# Get Prompt Function
# - Returns Stored String
func get_prompt() -> String:
	# Returns Text stored in Label
	return prompt.text

# Physics Process
# - Called Every Frame
func _physics_process(delta):
	
	# Check if the enemy has reached a designated attacking distance 
	# - If not, continue moving
	# - If at designated distance, then don't move and start attacking
	if(translation.z < attack_distance):
		
		# Moves Enemy Closer
		transform = transform.translated(Vector3(0,0,speed)) 
	
	elif(attacking == false):
		
		# Debug Console
		print(\"Attacking!\")
		
		# Start Attacking
		attack_timer.start()
		attacking = true

# Set Next Character
# -  Handles Formatting for characters in label
func set_next_character(next_character_index : int):
	
	# Plays Feedback Animation when Character Index is advanced
	if(next_character_index != 0):
		$Enemy/AnimationPlayer.stop()
		$Enemy/AnimationPlayer.play(\"hit\")
		
	# OH GOD - Formatting Handling
	# - Blue: All character Text already typed
	var blue_text = get_bbcode_color_tag(blue) + prompt_text.substr(0,next_character_index) + get_bbcode_end_color_tag()
	
	# - Green: Current Letter to Type
	var green_text = get_bbcode_color_tag(green) + prompt_text.substr(next_character_index,1) + get_bbcode_end_color_tag()
	
	# - Red: All characters left to type
	var red_text = \"\"
	if(next_character_index != prompt_text.length()):
			red_text = get_bbcode_color_tag(red) + prompt_text.substr(next_character_index+1,prompt_text.length()-next_character_index+1) + get_bbcode_end_color_tag()
			
	# Parse bbcode
	prompt.parse_bbcode(set_center_tags(blue_text + green_text + red_text))

# Set Center Tags
# - Handles setting center tags 
func set_center_tags(text_to_center : String) -> String:
	return \"[center]\" + text_to_center + \"[/center]\"

# Get bbcode color tag
# - Sets bbcode for the passed in color
func get_bbcode_color_tag(color : Color) -> String:
	return \"[color=#\" + color.to_html(false) + \"]\"
	
# Get bbcode end color tag 
# - End Color Tag 
func get_bbcode_end_color_tag() -> String:
	return \"[/color]\"

# Set Difficulty
# - Handles Internal Difficulty   
func set_difficulty(difficulty : int):
	handle_difficulty_increased(difficulty)
		
# Handle Difficulty Increased
# - Sets Speed According to Difficulty
func handle_difficulty_increased(new_difficulty : int):
	var new_speed = speed + (0.005 * new_difficulty)
	speed = clamp(new_speed, speed, .02)
	
# Handles Level Increasing
func handle_level_increased(new_level : int):
	difficulty = new_level
	
# Reset Timer Function
# Starts Attack Timer 
func resetTimer():
	$AttackTimer.start()

# Attack Timer Timeout
# - Attack Timer Times Out
func _on_AttackTimer_timeout():
	print(\"Damage!\")
	damage_queue.append(damage)
	print(damage_queue)
	
	
"

[sub_resource type="PlaneMesh" id=1]

[sub_resource type="Skin" id=2]
bind_count = 1
bind/0/name = ""
bind/0/bone = -1
bind/0/pose = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0 )

[sub_resource type="SpatialMaterial" id=3]
albedo_texture = ExtResource( 1 )

[sub_resource type="DynamicFont" id=4]
size = 32
font_data = ExtResource( 3 )

[sub_resource type="Animation" id=5]
resource_name = "hit"
tracks/0/type = "value"
tracks/0/path = NodePath(".:rotation_degrees")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ Vector3( 90, 0, 0 ), Vector3( 75.378, -90, -90 ), Vector3( 64.8254, 77.8333, 79.2792 ), Vector3( 90, 0, 0 ) ]
}

[sub_resource type="QuadMesh" id=6]
resource_local_to_scene = true
size = Vector2( 1, 0.2 )

[sub_resource type="ViewportTexture" id=7]
viewport_path = NodePath("Enemy/Viewport")

[sub_resource type="SpatialMaterial" id=8]
resource_local_to_scene = true
flags_transparent = true
flags_unshaded = true
flags_albedo_tex_force_srgb = true
albedo_texture = SubResource( 7 )

[node name="Spatial" type="Spatial"]
script = SubResource( 9 )

[node name="Enemy" type="MeshInstance" parent="."]
transform = Transform( 0.5, 0, 0, 0, -2.18557e-08, -0.5, 0, 0.5, -2.18557e-08, 0, 0.497989, 0 )
mesh = SubResource( 1 )
skin = SubResource( 2 )
material/0 = SubResource( 3 )

[node name="Viewport" type="Viewport" parent="Enemy"]
size = Vector2( 350, 180 )
hdr = false
usage = 0
render_target_v_flip = true

[node name="Control" type="Control" parent="Enemy/Viewport"]
margin_right = 40.0
margin_bottom = 40.0

[node name="Panel" type="Panel" parent="Enemy/Viewport/Control"]
margin_right = 350.0
margin_bottom = 180.0

[node name="RichTextLabel" type="RichTextLabel" parent="Enemy/Viewport/Control/Panel"]
anchor_top = -0.098
margin_left = 44.0
margin_top = 67.64
margin_right = 344.0
margin_bottom = 118.0
rect_clip_content = false
custom_fonts/normal_font = SubResource( 4 )
bbcode_enabled = true
bbcode_text = "[center]placeholder [/center]"
text = "placeholder "
fit_content_height = true
scroll_active = false
__meta__ = {
"_edit_use_anchors_": false
}

[node name="AnimationPlayer" type="AnimationPlayer" parent="Enemy"]
playback_default_blend_time = 2.0
playback_speed = 4.0
method_call_mode = 1
anims/hit = SubResource( 5 )

[node name="MeshInstance" type="MeshInstance" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1.18995, -1.20792e-13 )
mesh = SubResource( 6 )
material/0 = SubResource( 8 )

[node name="AttackTimer" type="Timer" parent="."]
wait_time = 10.0

[connection signal="timeout" from="AttackTimer" to="." method="_on_AttackTimer_timeout"]
